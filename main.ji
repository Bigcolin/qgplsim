include("MonteCarloSIM.ji")
import Base.Threads.@threads

α = [1.0, 2.0] # single index for x
θ = [1.0, -0.5]  # linear for x, <α, θ> = 0 for identification
γ = [1.0, 0.5] # single index for z
β = [1.0, -0.5] # linear for z
# Q(y|x, z) = Xθ + Zβ + g(Xα + Zγ)

n = 300
fx = 2 # y = f(x), fx for different f(x)     
                # fx = 1, y = X*θ + Z*β + (X*α + Z*γ .- 1).^2 + 0.2ϵ
                # fx = 2, y = X*θ + Z*β + log.(1 .+ exp.(X*α + Z*γ .- 1)) + 0.2ϵ
ifz = true #if false, Z = 0, i.e. no category varible
dist = 1 # Cauchy or Gauss
rep = 20  
alpha, gamma, theta, beta =  MonteCarlo(n, γ, θ, α, β, fx, dist, rep)
