using Distributions, Statistics

n1 = Normal(0, 1)
g(x) = cdf(n1, x)
# g(x) = sin(x)
t1 = TDist(1)
t3 = TDist(3)

function epsilon(n, etype)
    
    if etype == 1
            e = randn(n)/2
        elseif etype == 2
            e = rand(t3, n) * sqrt(3) / 10    
        elseif etype == 3
            e = rand(t1, n) / 10
        elseif etype == 0
            e = zeros(n)
        else
            e = randn(n)
            e = (e.^4 .- 3) .* 0.3             
    end
    e
end

function zgen(n, d = 2)
    
    if d == 1
        
        r = rand(n)
        z = (r .> 0.5)
        
    elseif d == 2
        
        r1 = rand(n)
        z1 = r1 .> 0.5
        r2 = rand(n)
        z2 = r2 .> 0.75
        z2 += r2 .> 0.25
        z = [z1 z2]
        
    else
        
        z = zeros(n, d)
        len = 1 /(d + 1)
        r = rand(n)
        for k in 1:d
            z[:, k] = (k - 1)*len .< r .< k*len
        end
        
    end
    z
end


function ygen(X, α, θ, Z, β, γ, ϵ, tp)
    if tp == 1
        y = X*α  + Z*β + log.( 1 .+ exp.(X*θ + Z*γ .- 1)) + ϵ
    elseif tp == 2        
        y = X*α  + Z*β + g.(0.1((X*θ + Z*γ .- 1).^2)) + ϵ
    else
        y = X*α  + Z*β + tp.(X*θ + Z*γ .- 1) + ϵ
        
    end
    y
end

function xgen(n, q, e)

    ∑ = zeros(q,q)
    
    for i in 1:q
        for j in i:q
            ∑[i, j] = 0.5^(j - i)
            ∑[j, i] = ∑[i, j]
        end
    end
    
    ∑ = sqrt.(∑)
    U = randn(n, q)
    X = U * ∑
    X
end

function xyz(n, alpha, beta, theta, gamma, etp, ytp, escale = 0.2)
    d = length(alpha)
    U = randn(n, d)
    X = U
    q = length(beta)
    Z = zgen(n, q)
    e = escale * epsilon(n, etp)
    y = ygen(X, alpha, theta, Z, beta, gamma, e, ytp)
    X, y, Z
    
end


